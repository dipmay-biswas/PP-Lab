(define (fac n) (if (= n 1) 1 (* n (fac (- n 1)))))
(display (fac 5))
(display "\n")
(define (fib n) (if (< n 2) n (+ (fib(- n 1)) (fib(- n 2)))))
(display (fib 6))
(display "\n")
(define (hcf x y) (cond ((= x y) x)
                        ((> x y) (hcf (- x y) y))
                        ((< x y) (hcf x (- y x)))
                        ))
(display (hcf 14 49))
(display "\n")
(define (max x y) (if (> x y) x y))
(define (large a) (if (= (length a) 1) (car a) (max (car a) (large (cdr a)))))
(define arr '(0 1 6 3 8 2 9 4 10 5 7))
(display (large arr))
(display "\n")
(define (sum a) (if (= (length a) 1) (car a) (+ (car a) (sum (cdr a)))))
(display (sum arr))